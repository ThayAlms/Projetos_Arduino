#include <ESP32Servo.h>
#include <U8g2lib.h>

// OLED SSD1306 I2C
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, 22, 21, U8X8_PIN_NONE);

// Pinos
const int POT_PIN = 39;   // CN-A39 = GPIO39
const int SERVO_PIN = 25; // Pino do servo

Servo myServo;
int potValue = 0;
int angle = 0;

void setup() {
  // Inicializa OLED
  u8g2.begin();

  // Inicializa servo (pulso mínimo e máximo)
  myServo.attach(SERVO_PIN, 500, 2400);

  // Tela inicial
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_ncenB08_tr);
  u8g2.drawStr(0, 15, "Controle do Servo");
  u8g2.sendBuffer();
  delay(1000);
}

void loop() {
  // Lê valor do potenciômetro (0-4095 no ESP32 ADC)
  potValue = analogRead(POT_PIN);

  // Converte para ângulo do servo (0-180)
  angle = map(potValue, 0, 4095, 0, 180);

  // Move o servo
  myServo.write(angle);

  // Atualiza display OLED
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_ncenB08_tr);
  u8g2.drawStr(0, 10, "Servo Angle:");

  // Mostra o valor do ângulo
  char buffer[10];
  sprintf(buffer, "%d", angle);
  u8g2.setCursor(0, 30);
  u8g2.print(buffer);

  // Desenha um slider gráfico
  int sliderLength = map(angle, 0, 180, 0, 120);
  u8g2.drawFrame(0, 40, 120, 10);
  u8g2.drawBox(0, 40, sliderLength, 10);

  u8g2.sendBuffer();

  delay(20); // suavidade da animação
}
